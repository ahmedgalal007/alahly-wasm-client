@page "/keyword/manage"
@using System.Collections.ObjectModel;
@using FSH.BlazorWebAssembly.Client.Components.EntityTable;

@attribute [MustHavePermission(FSHAction.View, FSHResource.Keywords)]

@inject IStringLocalizer<Manage> L
@*@inject IBrandsClient BrandsClient*@
@* @inject IKeywordClient KeywordClient *@

<FshTitle Title="@L["Keywords"]" Description="@L["Manage Keywords."]" />

<EntityTable TEntity="KeywordTableRow" TId="Guid" TRequest="UpdateKeywordRequest" Context="@Context">

    <ExtraActions>
        <MudButton Variant="Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary"
                   OnClick="@(() => ShowBtnPress(context.Id))">@((context.ShowDetails == true) ? L["Hide"] : L["Show"]) @L["Trail Details"]</MudButton>
    </ExtraActions>

    <EditFormContent>

            @if (!Context.AddEditModal.IsCreate)
            {
                
                <MudItem xs="12" md="12">
                @* <MudRTLProvider RightToLeft="true"> *@
                    <MudTextField  Typo="Typo.body1" Value="context.Id" ReadOnly DisableUnderLine Label="@L[$"Keyword Id"]" Variant="Variant.Filled" />
                    @* </MudRTLProvider> *@
                </MudItem>
                
            }

            <MudItem xs="12" md="12">
                <MudExpansionPanels Class="mb-4">
                    <MudExpansionPanel Text="Specifications" Class="me-0" IsInitiallyExpanded="true">
                        <MudGrid Class="pa-0" Style="width:100%">
                            <MudItem xs="12" md="3">
                                <MudCheckBox @bind-Checked="context.IsOrganization" @onblur="ForceRender" @onchange="ForceRender">
                                    @nameof(context.IsOrganization)
                                </MudCheckBox>
                            </MudItem>
                            <MudItem xs="12" md="3">
                                <MudCheckBox @bind-Checked="context.IsEvent" @onblur="ForceRender" @onchange="ForceRender">
                                    @nameof(context.IsEvent)
                                </MudCheckBox>
                            </MudItem>
                            <MudItem xs="12" md="3">
                                <MudCheckBox @bind-Checked="context.IsPerson" @onblur="ForceRender" @onchange="ForceRender">
                                    @nameof(context.IsPerson)
                                </MudCheckBox>
                            </MudItem>
                            <MudItem xs="12" md="3">
                                <MudCheckBox @bind-Checked="context.IsPlace" @onblur="ForceRender" @onchange="ForceRender">
                                    @nameof(context.IsPlace)
                                </MudCheckBox>
                            </MudItem>
                            <MudItem xs="12" md="3">
                                <MudCheckBox @bind-Checked="context.IsProduct" @onblur="ForceRender" @onchange="ForceRender">
                                    @nameof(context.IsProduct)
                                </MudCheckBox>
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                </MudExpansionPanels>
                @* <MudGrid Class="pa-0 ma-0" Style="width:100%">
                    <MudItem xs="12" md="12" Class="pa-0"> *@
                        <EditFormContentLocals TItem="LocalizedKeywordDto" Context="local" Items="context.Locals" OnAddLanguage="OnAddLanguage" OnUpdateLocal="OnUpdateLocals">
                            <MudGrid Class="pa-0 ma-0" Style="width:100%">
                                <MudItem xs="12" Class="ma-4">
                                    <MudTextField Label="@L["Title"]"
                                                  InputType="InputType.Text"
                                                  For="@(() => local.Title)"
                                                  Disabled="@(local.Enabled? false : true)"
                                                  @bind-Value="local.Title" Variant="Variant.Outlined"
                                                  TextChanged="@(e => UpdateTextItem(local, e))"
                                                  Immediate="true" Counter="25" MaxLength="25" />
                                </MudItem>
                                <MudItem xs="12" Class="ma-4">
                                    @* <MudTextField Label="@L["Description"]" @bind-Value="local.Description" TextChanged="@(e => UpdateTextItem(local, e))"></MudTextField> *@
                                    <MudTextField @ref="multilineReference" T="string" Label="@L["Description"]" Lines="3"
                                                  InputType="InputType.Text"
                                                  For="@(() => local.Description)"
                                                  Disabled="@(local.Enabled? false : true)"
                                                  @bind-Value="local.Description" Variant="Variant.Outlined"
                                                  TextChanged="@(e => UpdateTextItem(local, e))"
                                                  Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Api" OnAdornmentClick="@(() => multilineReference.SelectRangeAsync(5, 10))" />
                                </MudItem>
                            </MudGrid>
                        </EditFormContentLocals>
                    </MudItem>
               @*  </MudGrid>
            </MudItem> *@
    </EditFormContent>
    <ChildRowContent>
        @if (context.ShowDetails)
        {
            <MudTr>
                <MudCard Elevation="25" style="margin: 10px !important;">
                    <MudText>Row Contents</MudText>
                </MudCard>
            </MudTr>
        }
    </ChildRowContent>

    @*<ActionsContent>
    <MudMenu Label="@L["Actions"]" Variant="Variant.Filled" DisableElevation="true"
    EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" AnchorOrigin="Origin.TopLeft"
    TransformOrigin="Origin.TopLeft">
    @if (Context.CanUpdateEntityFunc(context))
    {
    <MudMenuItem @onclick="@(() => InvokeModal(context))">@L["Edit"]</MudMenuItem>
    }
    @if (Context.CanDeleteEntityFunc(context))
    {
    <MudMenuItem Style="color:red!important" @onclick="@(() => Delete(context))">@L["Delete"]</MudMenuItem>
    }
    @if (Context.HasExtraActionsFunc is not null )
    {
    // @ExtraActions(context)
    }
    </MudMenu>
    </ActionsContent>*@

</EntityTable>

@code
{
    private MudTextField<string>? multilineReference;
    private RenderFragment<KeywordTableRow>? FieldTemplate => keyword => __builder =>
    {
        <MudItem>
            <MudChip Icon="@Icons.Material.Filled.Watch" IconColor="Color.Secondary" Label="true" Color="Color.Surface"> @L["Title"] : @keyword.Locals?.FirstOrDefault()?.Title</MudChip>
        </MudItem>
        <MudItem>
            <MudChip Icon="@Icons.Material.Filled.Watch" IconColor="Color.Secondary" Label="true" Color="Color.Surface"> @L["Culture"] :  @keyword.Locals?.FirstOrDefault()?.CulturCode</MudChip>
        </MudItem>
    };

    // LocalizedKeyword item = new LocalizedKeyword();
    // ICollection<LocalizedKeyword> locals = new List<LocalizedKeyword>();


}