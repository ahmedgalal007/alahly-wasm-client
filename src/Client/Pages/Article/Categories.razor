@page "/categories"
@using System.Collections.ObjectModel;
@using FSH.BlazorWebAssembly.Client.Components.EntityTable;

@attribute [MustHavePermission(FSHAction.View, FSHResource.Categories)]

@inject IStringLocalizer<Categories> L
@*@inject IBrandsClient BrandsClient*@
@* @inject IKeywordClient KeywordClient *@

<FshTitle Title="@L["Categories"]" Description="@L["Manage Categories."]" />

<EntityTable TEntity="CategoryTableRow" TId="Guid" TRequest="UpdateCategoryRequest" Context="@Context">

    <ExtraActions>
        <MudButton Variant="Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary"
                   OnClick="@(() => ShowBtnPress(context.Id))">@((context.ShowDetails == true) ? L["Hide"] : L["Show"]) @L["Trail Details"]</MudButton>
    </ExtraActions>

    <EditFormContent>

        @if (!Context.AddEditModal.IsCreate)
        {

            <MudItem xs="12" md="12">
                @* <MudRTLProvider RightToLeft="true"> *@
                <MudTextField Typo="Typo.body1" Value="context.Id" ReadOnly DisableUnderLine Label="@L[$"Keyword Id"]" Variant="Variant.Filled" />
                @* </MudRTLProvider> *@
            </MudItem>

        }
        <EditFormContentLocals TItem="LocalizedCategoryDto" Context="local" Items="context.Locals" OnAddLanguage="OnAddLanguage" OnUpdateLocal="OnUpdateLocals">
                <MudGrid Class="pa-0 ma-0" Style="width:100%">
                    <MudItem xs="12" Class="ma-4">
                        <MudTextField Label="@L["Title"]"
                                      InputType="InputType.Text"
                                      For="@(() => local.Name)"
                                      Disabled="@(local.Enabled? false : true)"
                                      @bind-Value="local.Name" Variant="Variant.Outlined"
                                      TextChanged="@(e => UpdateTextItem(local, e))"
                                      Immediate="true" Counter="25" MaxLength="25" />
                    </MudItem>
                    <MudItem xs="12" Class="ma-4">
                        @* <MudTextField Label="@L["Description"]" @bind-Value="local.Description" TextChanged="@(e => UpdateTextItem(local, e))"></MudTextField> *@
                        <MudTextField @ref="multilineReference" T="string" Label="@L["Description"]" Lines="3"
                                      InputType="InputType.Text"
                                      For="@(() => local.Description)"
                                      Disabled="@(local.Enabled? false : true)"
                                      @bind-Value="local.Description" Variant="Variant.Outlined"
                                      TextChanged="@(e => UpdateTextItem(local, e))"
                                      Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Api" OnAdornmentClick="@(() => multilineReference.SelectRangeAsync(5, 10))" />
                    </MudItem>
                </MudGrid>
            </EditFormContentLocals>
    </EditFormContent>
    <ChildRowContent>
        @if (context.ShowDetails)
        {
            <MudTr>
                <MudCard Elevation="25" style="margin: 10px !important;">
                    <MudText>Row Contents</MudText>
                </MudCard>
            </MudTr>
        }
    </ChildRowContent>

    @*<ActionsContent>
    <MudMenu Label="@L["Actions"]" Variant="Variant.Filled" DisableElevation="true"
    EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" AnchorOrigin="Origin.TopLeft"
    TransformOrigin="Origin.TopLeft">
    @if (Context.CanUpdateEntityFunc(context))
    {
    <MudMenuItem @onclick="@(() => InvokeModal(context))">@L["Edit"]</MudMenuItem>
    }
    @if (Context.CanDeleteEntityFunc(context))
    {
    <MudMenuItem Style="color:red!important" @onclick="@(() => Delete(context))">@L["Delete"]</MudMenuItem>
    }
    @if (Context.HasExtraActionsFunc is not null )
    {
    // @ExtraActions(context)
    }
    </MudMenu>
    </ActionsContent>*@

</EntityTable>

@code
{
    private MudTextField<string>? multilineReference;
    private RenderFragment<CategoryTableRow>? FieldTemplate => keyword => __builder =>
    {
        <MudItem>
            <MudChip Icon="@Icons.Material.Filled.Watch" IconColor="Color.Secondary" Label="true" Color="Color.Surface"> @L["Title"] : @keyword.Locals?.FirstOrDefault()?.Name</MudChip>
        </MudItem>
        <MudItem>
            <MudChip Icon="@Icons.Material.Filled.Watch" IconColor="Color.Secondary" Label="true" Color="Color.Surface"> @L["Culture"] :  @keyword.Locals?.FirstOrDefault()?.CulturCode</MudChip>
        </MudItem>
    };

    // LocalizedKeyword item = new LocalizedKeyword();
    // ICollection<LocalizedKeyword> locals = new List<LocalizedKeyword>();


}